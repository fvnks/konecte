// src/ai/flows/assistant-chat-flow.ts
'use server';
/**
 * @fileOverview AI flow for a conversational assistant.
 * - getAssistantResponse - Function to trigger the flow.
 * - AssistantChatInput - Input type.
 * - AssistantChatOutput - Output type.
 */
import { ai } from '@/ai/genkit';
import { z } from 'genkit';

export const AssistantChatInputSchema = z.object({
  userInput: z.string().describe('The message sent by the user to the assistant.'),
  // Podríamos añadir historial de chat aquí en el futuro para contexto.
});
export type AssistantChatInput = z.infer<typeof AssistantChatInputSchema>;

export const AssistantChatOutputSchema = z.object({
  assistantResponse: z.string().describe('The response generated by the AI assistant.'),
});
export type AssistantChatOutput = z.infer<typeof AssistantChatOutputSchema>;

export async function getAssistantResponse(input: AssistantChatInput): Promise<AssistantChatOutput> {
  return assistantChatFlow(input);
}

const assistantChatFlow = ai.defineFlow(
  {
    name: 'assistantChatFlow',
    inputSchema: AssistantChatInputSchema,
    outputSchema: AssistantChatOutputSchema,
  },
  async (input) => {
    const prompt = `
      Eres "Asistente Konecte", un amigable y útil asistente virtual para una plataforma inmobiliaria llamada konecte.
      Tu objetivo es ayudar a los usuarios respondiendo sus preguntas sobre la plataforma, el mercado inmobiliario en Chile, o cualquier otra consulta general que puedan tener.
      Sé conciso, amable y profesional. No inventes información si no la conoces.

      Usuario: ${input.userInput}
      Asistente Konecte:`;

    const llmResponse = await ai.generate({
      prompt: prompt,
      // El modelo por defecto es 'googleai/gemini-2.0-flash' según tu ai/genkit.ts
      config: {
        temperature: 0.7, // Ajusta la creatividad
      },
    });

    return { assistantResponse: llmResponse.text || "Lo siento, no pude procesar tu solicitud en este momento." };
  }
);
